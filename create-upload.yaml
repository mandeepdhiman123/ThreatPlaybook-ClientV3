objectType: Feature
name: create_upload_expense
description: As a user, I am able to create and upload expenses within project limit that have been incurred by me for processing/payment by my manager, so I can get reimbursed
abuse_cases:
  - name: manipulate expense information
    description: As a malicious user, I will manipulate expense management process to get larger or bogus expenses into the system.
    threat_scenarios:
    - name: sql injection expense limit bypass
      type: repo
      description: Perform SQL Injection to compromise the Database, and raise project budget limits or bypass expense controls
      reference: {name: sql_injection, severity: 3}

    - name: compromise manager password
      type: repo
      description: Compromise my manager's password and increase budgets to create expenses with larger amounts
      reference: {name: weak-default-password, severity: 2}

    - name: compromise manager auth token
      type: repo
      description: Attempt to steal manager's authentication token through XSS to elevate privileges to manager's account and increase project expense budgets
      reference: {name: xss, severity: 3}
  
  - name: tag-expense-to-someone-else
    description: As a malicious user, I will create/tag my expenses to another user (like CEO) and get them approved
    threat_scenarios:
    - name: sql injection change user
      type: repo
      description: Perform SQL Injection to compromise the Database, and change user tagged to specific expenses
      reference: {name: sql_injection, severity: 3}
    - name: compromise user password
      type: repo
      description: Compromise another user's password and tag my expenses to that user
      reference: {name: weak-default-password, severity: 2}
    
    - name: authorization bypass change user
      type: repo
      reference: {name: idor_pk, severity: 3}
      description: Perform Authorization Bypass through IDOR or Mass Assignment style vulnerabilities to get expenses tagged to another user
    
    - name: compromise user auth token-change expenses
      type: repo
      description: Attempt to steal user's authentication token through XSS to elevate privileges to user's account and tag unauthorized expenses
      reference: {name: xss, severity: 3}
    
  - name: bring-down-the-system-malware
    description: As a malicious user, I want to bring down the system by planting malware in the reimbursement system
    threat_scenarios:
    - name: upload-malware
      type: inline
      description: I will upload malware as an expense to the system and compromise the application and create a DoS condition
      vul_name: Malicious File Upload
      severity: 3
      cwe: 434
      test-cases:
      - name: manual-pentesting
        test: upload files with reverse-shell and CSV injection payloads and attempt to trigger remote code execution on Project Manager's Computer
        type: exploit
        tools: manual
    - name: leverage vulnerable component
      type: inline
      description: Leverage Vulnerable Component in target environment and compromise the service to create a DoS scenario
      vul_name: Exploit Vulnerable Third Party Component
      severity: 2
      cwe: 16
      test-cases:
      - name: automated-testing
        test: run vulnerability scanning tools to identify exploitable software in the target environment
        type: discovery
        tools: nessus

    

internal_interactions:
- upload_expense: "HTTP POST Request"
- logout: "HTTP GET Request"
part_of: core_webservice